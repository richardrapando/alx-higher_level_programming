Checking for module docstring:
         >>> m = __import__("1-my_list").__doc__
         >>> len(m) > 1
         True

Checking for class docstring:
         >>> c = __import__("1-my_list").MyList.__doc__
         >>> len(c) > 1
         True

Checking for method docstring:
	  >>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
	  >>> len(mod) > 1
	  True

Checking that MyList inherits from list:
	  >>> issubclass(MyList, list)
	  True

Checking for empty list:
	  >>> l = MyList()
	  >>> l.print_sorted()
	  []

Checking that appendng works:
	  >>> l.append(2)
	  >>> l.append(3)
	  >>> l.append(4)
	  >>> l.append(5)
	  >>> print(l)
	  [2, 3, 4, 5]

Checking for list already in correct order:
	  >>> l.print_sorted()
	  [2, 3, 4, 5]

Checking for reversed order list:
	  >>> l = MyList()
	  >>> l.append(5)
	  >>> l.append(4)
	  >>> l.append(3)
	  >>> l.append(2)
	  >>> print(l)
	  [5, 4, 3, 2]
	  >>> l.print_sorted()
	  [2, 3, 4, 5]
	  >>> print(l)
	  [5, 4, 3, 2]

Checking for one negative number:
	  >>> l.append(-2)
	  >>> l.append(6)
	  >>> print(l)
	  [5, 4, 3, 2, -2, 6]
	  >>> l.print_sorted()
	  [-2, 2, 3, 4, 5, 6]
	  >>> print(l)
	  [5, 4, 3, 2, -2, 6]

Checking for all negative numbers:
	  >>> l = MyList()
	  >>> l.append(-11)
	  >>> l.append(-2)
	  >>> l.append(-8)
	  >>> l.append(-3)
	  >>> l.append(-9)
	  >>> print(l)
	  [-11, -2, -8, -3, -9]
	  >>> l.print_sorted()
	  [-11, -9, -8, -3, -2]
	  >>> print(l)
          [-11, -2, -8, -3, -9]

Checking for too many arguments:
	  >>> l.print_sorted(1)
	  Traceback (most recent call last):
	  ...
	  TypeError: print_sorted() takes 1 positional argument but 2 were given
