===========================
How to Use 3-say_my_name.py
===========================

This module defines the function ``say_my_name(first_name, last_name="")``

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("Richard", "Rapando")
	My name is Richard Rapando

::

	>>> say_my_name("Richie", "Raps")
	My name is Richie Raps

The parameter ```last_name``` is not mandatory. If no last name is provided,
an empty string is printed.

::

	>>> say_my_name("Richard")
	My name is Richard

Invalid Names
=============

The parameters ```first_name``` and ```last_name``` must be strings. Otherwise,
a TypeError is raised.

::

	>>> say_my_name(3, "Raps")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name("Oka", ["Rara", "Tekno"])
	Traceback (most recent call last):
	TypeError: last_name must be a string

::
	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

At least one name must be provided

::

	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'
